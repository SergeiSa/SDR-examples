function TaskJacobian_derivative = g_InverseKinematics_TaskJacobian_derivative(in1,in2)
%G_INVERSEKINEMATICS_TASKJACOBIAN_DERIVATIVE
%    TASKJACOBIAN_DERIVATIVE = G_INVERSEKINEMATICS_TASKJACOBIAN_DERIVATIVE(IN1,IN2)

%    This function was generated by the Symbolic Math Toolbox version 8.1.
%    19-Dec-2020 12:35:51

q1 = in1(1,:);
q2 = in1(2,:);
q3 = in1(3,:);
v1 = in2(1,:);
v2 = in2(2,:);
v3 = in2(3,:);
t2 = q1+q2+q3;
t3 = sin(t2);
t4 = t3.*(1.0./1.2e1);
t5 = q1+q2;
t6 = sin(t5);
t7 = t6.*(1.0./4.0);
t8 = t4+t7;
t9 = t8.*v2;
t10 = t3.*v3.*(1.0./1.2e1);
t11 = cos(t2);
t12 = t11.*(1.0./1.2e1);
t13 = cos(t5);
t14 = t13.*(1.0./4.0);
t15 = t12+t14;
t16 = v1+v2+v3;
t17 = sin(q1);
t18 = t3.*(1.0./2.0);
t19 = t6.*(1.0./2.0);
t20 = t18+t19;
t21 = t20.*v2;
t22 = t3.*v3.*(1.0./2.0);
TaskJacobian_derivative = reshape([0.0,t9+t10+v1.*(t4+t7+t17.*(5.0./1.2e1)),t11.*v3.*(-1.0./1.2e1)-t15.*v2-v1.*(t12+t14+cos(q1).*(5.0./1.2e1)),t21+t22+v1.*(t17.*(1.0./2.0)+t18+t19),0.0,t9+t10+t8.*v1,t11.*v3.*(-1.0./1.2e1)-t15.*v1-t15.*v2,t21+t22+t20.*v1,0.0,t3.*t16.*(1.0./1.2e1),t11.*t16.*(-1.0./1.2e1),t3.*t16.*(1.0./2.0)],[4,3]);
